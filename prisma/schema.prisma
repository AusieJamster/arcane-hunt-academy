// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

model Weapon {
  id                      String          @id @default(uuid())
  name                    String          @unique
  imageUrl                String?         @unique
  price                   Int
  baseId                  String?
  unlockLevel             Int?
  size                    SizeEnum
  ammoCapacity            AmmoCapacity[]
  ammoOptions             AmmoOptions[]
  damage                  Float
  damageType              DamageTypeEnum?
  silenced                Boolean         @default(false)
  weaponStats             WeaponStats?    @relation(fields: [weaponStatsName], references: [id])
  meleeDamage             Float
  meleeDamageType         DamageTypeEnum  @default(BLUNT)
  heavyMeleeDamage        Float
  heavyMeleeDamageType    DamageTypeEnum  @default(BLUNT)
  staminaConsumption      Float
  heavyStaminaConsumption Float
  weaponStatsName         String?

  @@index([id])
  @@index([weaponStatsName])
}

model Tool {
  id             String         @id @default(uuid())
  name           String         @unique
  imageUrl       String?        @unique
  attribute      Attribute
  activationType ActivationType
  descriptions   String         @db.VarChar(255)
  price          Int
  baseId         String?
  capacity       Int            @default(1)
  unlockLevel    Int?
  slot           SlotType

  controlRange Int?

  damage         Float?
  damageTypes    DamageType[]
  damageRadius   Float?
  throwRange     Float?
  effectDuration Int? // in seconds

  activationValue    Int?
  activationDuration Float
  silenced           Boolean @default(false)

  weaponStats WeaponStats? @relation(fields: [weaponStatsName], references: [id])

  meleeDamage              Float          @default(13)
  meleeDamageType          DamageTypeEnum @default(BLUNT)
  heavyMeleeDamage         Float          @default(27)
  heavyMeleeDamageType     DamageTypeEnum @default(BLUNT)
  staminaConsumption       Float          @default(5)
  heavyStaminaConsumption  Float          @default(10)
  staminaConsumptionThrown Float?
  weaponStatsName          String?

  @@index([id])
  @@index([weaponStatsName])
}

model WeaponStats {
  id             String   @id @default(uuid()) @map("name")
  weaponName     String
  effectiveRange Float?
  sightedRange   Float?
  rateOfFire     Float?
  cycleTime      Float?
  spread         Float?
  sway           Float?
  verticalRecoil Float?
  reloadSpeed    Float?
  muzzleVelocity Float?
  tools          Tool[]
  weapon         Weapon[]

  @@index([id])
}

model AmmoCapacity {
  id              String        @id @default(uuid())
  magazinePlusOne Boolean       @default(false)
  magazine        Int           @db.TinyInt
  capacity        Int           @db.TinyInt
  type            AmmoTypeEnum
  weapon          Weapon[]
  AmmoOptions     AmmoOptions[]
}

model DamageType {
  id              String         @id @default(uuid())
  type            DamageTypeEnum @unique
  Tool_Consumable Tool[]
}

model AmmoOptions {
  id             String          @id @default(uuid())
  name           String          @unique
  price          Int
  capacity       AmmoCapacity    @relation(fields: [ammoCapacityId], references: [id])
  type           AmmoOptionsEnum
  weapon         Weapon[]
  ammoCapacityId String

  @@index([ammoCapacityId])
}

enum Attribute {
  HEALTH
  STAMINA
  ANTIDOTE
  SUPPLY
  LIGHT
  FIRE
  EXPLOSION
  NOISE
  RENDING
  POISON
  BLUNT
  BULLET
  SCOUTING
}

enum SlotType {
  TOOL
  CONSUMABLE
}

enum ActivationType {
  TOOL
  THROWABLE
  CONSUMABLE
  PLACEABLE
}

enum AmmoTypeEnum {
  COMPACT
  MEDIUM
  LONG
  SHOTGUN
  SPECIAL
  SPECIAL_NITRO
  SPECIAL_BOLT
  SPECIAL_BOLT_COMPACT
  SPECIAL_ARROW
  SPECIAL_PROTOTYPE_BULLET
}

enum SizeEnum {
  SMALL
  MEDIUM
  LARGE
}

enum DamageTypeEnum {
  BLUNT
  PIERCING
  LIGHT_RENDING
  RENDING
  INTENSE_RENDING
  LIGHT_FIRE
  FIRE
  INTENSE_FIRE
  EXPLOSION
  POISON
  LIGHT
}

enum AmmoOptionsEnum {
  INCENDIARY
  SPITZER
  HIGH_VELOCITY
  DUM_DUM
  EXPLOSIVE
  FULL_METAL_JACKET
  POISON
  STARSHELL
  DRAGONBREATH
  SLUG
  PENNY_SHOT
  FLECHETTE
  STEEL_BALL
  BOLT_POISON
  BOLT_CHOAS
  BOLT_CHOKE
  BOLT_EXPLOSIVE
  BOLT_SHOT
  ARROW_CONCERTINA
  ARROW_FRAG
  ARROW_POISON
  SHREDDER
}
